// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AppierExtension
@_exported import AppierExtension
import Foundation
import Swift
import os
extension Logger {
  @objc(aiquaNotificationLogger) public static let aiquaNotification: AppierExtension.Logger
}
@_inheritsConvenienceInitializers @objc(APRFrameworkInfo) @objcMembers final public class FrameworkInfo : ObjectiveC.NSObject {
  @objc public static var buildString: Swift.String {
    @objc get
  }
  @objc public static var versionString: Swift.String {
    @objc get
  }
  @objc deinit
  @objc override dynamic public init()
}
@_hasMissingDesignatedInitializers @objc(APRLogger) public class Logger : ObjectiveC.NSObject {
  @objc final public let category: Swift.String
  @objc public var enabled: Swift.Bool {
    @objc get
  }
  @objc(descriptionForLevel:) public static func description(for level: AppierExtension.LogType) -> Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@objc(APRLogType) public enum LogType : Swift.Int {
  case debug, info, warning, error
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
extension LogType : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
extension AppierExtension.LogType : Swift.Equatable {}
extension AppierExtension.LogType : Swift.Hashable {}
extension AppierExtension.LogType : Swift.RawRepresentable {}
