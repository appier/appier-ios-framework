#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
#ifndef APPIER_SWIFT_H
#define APPIER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AppTrackingTransparency;
@import CoreData;
@import CoreFoundation;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <Appier/Appier.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Appier",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@protocol AIQDataTrackingConfigurationDelegate;
@class AIQLocalStorage;

SWIFT_CLASS("_TtC6Appier28AIQDataTrackingConfiguration")
@interface AIQDataTrackingConfiguration : NSObject
@property (nonatomic, weak) id <AIQDataTrackingConfigurationDelegate> _Nullable delegate;
@property (nonatomic, strong) AIQLocalStorage * _Nonnull storage;
@property (nonatomic) BOOL isCollectIDFA;
@property (nonatomic) BOOL isCollectLocation;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithIsCollectIDFA:(BOOL)isCollectIDFA isCollectLocation:(BOOL)isCollectLocation;
- (nonnull instancetype)initWithStorage:(AIQLocalStorage * _Nonnull)storage OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP6Appier36AIQDataTrackingConfigurationDelegate_")
@protocol AIQDataTrackingConfigurationDelegate
- (void)updateUserDetailWhenDataTrackingConfigChanged;
@end

@class NSString;

SWIFT_CLASS("_TtC6Appier9AIQObject")
@interface AIQObject : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6Appier11AIQGeofence")
@interface AIQGeofence : AIQObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AIQGeofencing;

SWIFT_CLASS("_TtC6Appier15AIQGeofenceData")
@interface AIQGeofenceData : AIQObject
@property (nonatomic, readonly, strong) AIQGeofencing * _Nonnull geofencing;
@end

@protocol AIQGeofenceManagerDelegate;

SWIFT_CLASS("_TtC6Appier18AIQGeofenceManager")
@interface AIQGeofenceManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AIQGeofenceManager * _Nonnull shared;)
+ (AIQGeofenceManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <AIQGeofenceManagerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithStorage:(AIQLocalStorage * _Nonnull)storage OBJC_DESIGNATED_INITIALIZER;
- (void)getGeofenceDetailsWithCompletion:(void (^ _Nonnull)(NSDictionary * _Nonnull))completion;
- (void)shouldFetchGeofenceWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)updateWithGeofencing:(NSDictionary<NSString *, id> * _Nonnull)geofencing;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CLLocation;

SWIFT_PROTOCOL("_TtP6Appier29AIQGeofenceMonitoringDelegate_")
@protocol AIQGeofenceMonitoringDelegate
- (void)didStartMonitoringWithRegionIdentifier:(NSString * _Nonnull)regionIdentifier;
- (void)monitoringDidFailWithRegionIdentifier:(NSString * _Nullable)regionIdentifier error:(NSError * _Nonnull)error;
- (void)didEnterRegionWithIdentifier:(NSString * _Nonnull)identifier location:(CLLocation * _Nonnull)location;
- (void)didExitRegionWithIdentifier:(NSString * _Nonnull)identifier location:(CLLocation * _Nonnull)location;
- (void)locationAuthorizationDidChange;
@end


@interface AIQGeofenceManager (SWIFT_EXTENSION(Appier)) <AIQGeofenceMonitoringDelegate>
- (void)didStartMonitoringWithRegionIdentifier:(NSString * _Nonnull)regionIdentifier;
- (void)monitoringDidFailWithRegionIdentifier:(NSString * _Nullable)regionIdentifier error:(NSError * _Nonnull)error;
- (void)didEnterRegionWithIdentifier:(NSString * _Nonnull)identifier location:(CLLocation * _Nonnull)location;
- (void)didExitRegionWithIdentifier:(NSString * _Nonnull)identifier location:(CLLocation * _Nonnull)location;
- (void)locationAuthorizationDidChange;
@end



SWIFT_PROTOCOL("_TtP6Appier26AIQGeofenceManagerDelegate_")
@protocol AIQGeofenceManagerDelegate
- (void)logGeofenceWithEvent:(NSString * _Nonnull)event parameters:(NSDictionary * _Nonnull)parameters;
- (void)setUserProfileWithGeofencingCapable:(BOOL)geofencingCapable;
- (void)fetchGeofence;
@end



SWIFT_CLASS("_TtC6Appier13AIQGeofencing")
@interface AIQGeofencing : AIQObject
@property (nonatomic, readonly, copy) NSArray<AIQGeofence *> * _Nullable geofences;
@end


SWIFT_CLASS("_TtC6Appier15AIQLocalStorage")
@interface AIQLocalStorage : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) AIQLocalStorage * _Nonnull shared;)
+ (AIQLocalStorage * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(AIQLocalStorage * _Nonnull)value;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithSuiteName:(NSString * _Nonnull)suiteName OBJC_DESIGNATED_INITIALIZER;
@end


@class NSURL;
@class NSNumber;

@interface AIQLocalStorage (SWIFT_EXTENSION(Appier))
/// Calling this method will update the UserDefaults and the suiteName if the original suiteName is nil or differs from the new one.
/// When the app is installed for the first time, we are unable to retrieve the QG_APP_GROUP_NAME_SDK prior to initialization. As a result, the UserDefaults of AIQLocalshared does not refer to the QG_APP_GROUP_NAME_SDK that the SDK is supposed to utilize.
/// \param suiteName new suiteName
///
- (void)updateSuiteNameIfNeeded:(NSString * _Nonnull)suiteName;
/// Sets and persists initialization parameters.
/// \param appID App ID.
///
/// \param groupName iOS App Group name.
///
/// \param devProfile true to enable development mode.
///
/// \param frameworkType Type of the SDK for cross-platform framework.
///
/// \param version Vesrion of the SDK for the cross-platform framework.
///
- (void)setAppID:(NSString * _Nonnull)appID groupName:(NSString * _Nonnull)groupName devProfile:(BOOL)devProfile frameworkType:(NSString * _Nonnull)frameworkType version:(NSString * _Nonnull)version;
/// Generates a new ‘appierId’ and persists it. Existing ‘appierId’ will be overwritten.
- (void)createAndSaveNewAppierId;
/// Returns true if profile info is sent in last 24 hrs
- (BOOL)shouldUserDetailsBeSent SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSDictionary *> * _Nonnull)getFailedPushEventLogs SWIFT_WARN_UNUSED_RESULT;
- (void)clearFailedPushEventLogs;
/// Determines if current user is a new user.
///
/// returns:
/// True if current user is a new user, otherwise False.
- (BOOL)isNewUser SWIFT_WARN_UNUSED_RESULT;
- (void)handleDeepLink:(NSURL * _Nonnull)url;
/// check if last clicked notif. time is less than 24 hrs
- (BOOL)isClickThroughAttribution SWIFT_WARN_UNUSED_RESULT;
/// click through attribution for inApp and notificaiton click
- (void)setClickThroughForNotificationId:(NSNumber * _Nonnull)notificationId;
- (BOOL)isViewThroughAttribution SWIFT_WARN_UNUSED_RESULT;
/// view through attribution for inApp
- (void)setViewThroughForNotificationId:(NSNumber * _Nonnull)notificationId;
@end


@class NSDate;
@class AIQMutableOrderedDictionary;
@class NSData;

SWIFT_PROTOCOL("_TtP6Appier10AIQStorage_")
@protocol AIQStorage
- (void)clean;
@property (nonatomic) BOOL isDevProfile;
@property (nonatomic, copy) NSString * _Nullable appID;
/// This is equivalent to <em>appID != nil</em>
@property (nonatomic, readonly) BOOL hasAppID;
@property (nonatomic, copy) NSString * _Nonnull appSecret;
@property (nonatomic, copy) NSString * _Nullable appVersion;
@property (nonatomic, copy) NSString * _Nullable deviceToken;
/// nil if it is native iOS
@property (nonatomic, copy) NSString * _Nullable crossPlatformFrameworkSdkType;
/// The native SDK version that the cross platform framework refers to
@property (nonatomic, copy) NSString * _Nullable crossPlatformFrameworkSdkVersion;
@property (nonatomic, strong) NSNumber * _Nullable appierID;
/// This is equivalent to <em>userID != nil</em>
@property (nonatomic, readonly) BOOL hasAppierID;
@property (nonatomic, copy) NSDate * _Nullable appierIdCreateTime;
/// This is equivalent to <em>appierIdCreateTime != nil</em>
@property (nonatomic, readonly) BOOL hasAppierIdCreateTime;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable universalLinkDomains;
@property (nonatomic) BOOL isRichPushSupported;
@property (nonatomic, copy) NSDate * _Nullable lastViewThroughTime;
@property (nonatomic, copy) NSDate * _Nullable lastClickedNotificationTime;
@property (nonatomic, strong) NSNumber * _Nullable lastClickedNotificationID;
@property (nonatomic, strong) NSNumber * _Nullable lastViewThroughNotificationID;
@property (nonatomic, strong) NSNumber * _Nullable viewThroughAttributionWindow;
/// This is equivalent to <em>viewThroughAttributionWindow != nil</em>
@property (nonatomic, readonly) BOOL hasViewThroughAttributionWindow;
@property (nonatomic, strong) NSNumber * _Nullable clickAttributionWindow;
/// [“point”: [longitude, latitude]]
@property (nonatomic, copy) NSDictionary<NSString *, NSArray<NSNumber *> *> * _Nullable lastLocation;
@property (nonatomic, copy) NSString * _Nullable sdkVersionKey;
/// This is equivalent to <em>sdkVersionKey != nil</em>
@property (nonatomic, readonly) BOOL hasSdkVersionKey;
@property (nonatomic) BOOL shouldSendIDFAWithConsent;
@property (nonatomic, copy) NSDate * _Nullable userDetailsLastSentTime;
/// This is equivalent to <em>userDetailsLastSentTime != nil</em>
@property (nonatomic, readonly) BOOL hasUserDetailsLastSentTime;
@property (nonatomic, strong) NSNumber * _Nullable optoutStatus;
/// This is equivalent to <em>optoutStatus != nil</em>
@property (nonatomic, readonly) BOOL hasOptoutStatus;
/// Use this status only if hasAdsTrackingStatus is true
@property (nonatomic) ATTrackingManagerAuthorizationStatus adsTrackingStatus SWIFT_AVAILABILITY(ios,introduced=14.0);
/// Whether there’s value for adsTrackingStatus or not
@property (nonatomic, readonly) BOOL hasAdsTrackingStatus SWIFT_AVAILABILITY(ios,introduced=14.0);
@property (nonatomic, copy) NSDictionary * _Nullable personalizationConfig;
/// This is equivalent to <em>personalizationConfig != nil</em>
@property (nonatomic, readonly) BOOL hasPersonalizationConfig;
/// Use this status only if isPersonalizationDisabledStatusNotConfigured is true. Otherwise, it is false.
@property (nonatomic) BOOL isPersonalizationDisabled;
/// This is equivalent to <em>isPersonalizationDisabled != nil</em>
@property (nonatomic, readonly) BOOL isPersonalizationDisabledStatusNotConfigured;
/// JSON string of [AIQGeofence].
@property (nonatomic, copy) NSString * _Nullable geofences;
/// The geofence capablility
@property (nonatomic) BOOL isGeofenceCapable;
/// The raw data is encoded before set and decoded before return. ([notificationId: QGInbox])
@property (nonatomic, copy) NSDictionary * _Nullable inbox;
/// This is equivalent to <em>inbox != nil</em>
@property (nonatomic, readonly) BOOL hasInbox;
/// Use this status only if hasInboxLimit is true. Otherwise, it is 0.
@property (nonatomic) NSInteger inboxLimit;
/// This is equivalent to <em>inboxLimit != nil</em>
@property (nonatomic, readonly) BOOL hasInboxLimit;
@property (nonatomic) BOOL isNotFirstAppBackground;
@property (nonatomic) BOOL isForceTouchCapabilityEnabled;
@property (nonatomic) BOOL inAppDisabledStatus;
/// The raw data is encoded before set and decoded before return
@property (nonatomic, strong) AIQMutableOrderedDictionary * _Nullable inApp;
/// This is equivalent to <em>inApp != nil</em>
@property (nonatomic, readonly) BOOL hasInApp;
@property (nonatomic) BOOL inAppFirstAppLaunchedMatched;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable crashLogKey;
/// The raw data is encoded before set and decoded before return
@property (nonatomic, copy) NSArray<NSDictionary *> * _Nullable savedPushNotifications;
/// This is equivalent to <em>savedPushNotification != nil</em>
@property (nonatomic, readonly) BOOL hasSavedPushNotifications;
/// This will be read in AppierExtension. The default value is 20.
@property (nonatomic, strong) NSNumber * _Nonnull savedPushNotificationLimit;
/// This will be read in AppierExtension
@property (nonatomic) BOOL isSavedPushNotificationEnabled;
@property (nonatomic, copy) NSString * _Nullable richPushDeeplink;
@property (nonatomic) BOOL isFirstAppLaunch;
@property (nonatomic, copy) NSString * _Nullable endpointUserServer;
@property (nonatomic, copy) NSString * _Nullable endpointDback;
@property (nonatomic, copy) NSString * _Nullable endpointRecommendation;
@property (nonatomic, copy) NSString * _Nullable endpointPersonalization;
@property (nonatomic, copy) NSArray<NSDictionary *> * _Nullable failedPushEventStack;
@property (nonatomic, copy) NSData * _Nullable exitPushPayload;
@property (nonatomic) BOOL isCollectIDFA;
@property (nonatomic) BOOL isCollectLocation;
@end


@interface AIQLocalStorage (SWIFT_EXTENSION(Appier)) <AIQStorage>
- (void)clean;
@property (nonatomic) BOOL isDevProfile;
@property (nonatomic, copy) NSString * _Nullable appID;
@property (nonatomic, readonly) BOOL hasAppID;
@property (nonatomic, copy) NSString * _Nonnull appSecret;
@property (nonatomic, copy) NSString * _Nullable appVersion;
@property (nonatomic, copy) NSString * _Nullable deviceToken;
@property (nonatomic, copy) NSString * _Nullable crossPlatformFrameworkSdkType;
@property (nonatomic, copy) NSString * _Nullable crossPlatformFrameworkSdkVersion;
@property (nonatomic, strong) NSNumber * _Nullable appierID;
@property (nonatomic, readonly) BOOL hasAppierID;
@property (nonatomic, copy) NSDate * _Nullable appierIdCreateTime;
@property (nonatomic, readonly) BOOL hasAppierIdCreateTime;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable universalLinkDomains;
@property (nonatomic) BOOL isRichPushSupported;
@property (nonatomic, copy) NSDate * _Nullable lastViewThroughTime;
@property (nonatomic, copy) NSDate * _Nullable lastClickedNotificationTime;
@property (nonatomic, strong) NSNumber * _Nullable lastClickedNotificationID;
@property (nonatomic, strong) NSNumber * _Nullable lastViewThroughNotificationID;
@property (nonatomic, strong) NSNumber * _Nullable viewThroughAttributionWindow;
@property (nonatomic, readonly) BOOL hasViewThroughAttributionWindow;
@property (nonatomic, strong) NSNumber * _Nullable clickAttributionWindow;
@property (nonatomic, copy) NSDictionary<NSString *, NSArray<NSNumber *> *> * _Nullable lastLocation;
@property (nonatomic, copy) NSString * _Nullable sdkVersionKey;
@property (nonatomic, readonly) BOOL hasSdkVersionKey;
@property (nonatomic) BOOL shouldSendIDFAWithConsent;
@property (nonatomic, copy) NSDate * _Nullable userDetailsLastSentTime;
@property (nonatomic, readonly) BOOL hasUserDetailsLastSentTime;
@property (nonatomic, strong) NSNumber * _Nullable optoutStatus;
@property (nonatomic, readonly) BOOL hasOptoutStatus;
@property (nonatomic) ATTrackingManagerAuthorizationStatus adsTrackingStatus SWIFT_AVAILABILITY(ios,introduced=14.0);
@property (nonatomic, readonly) BOOL hasAdsTrackingStatus SWIFT_AVAILABILITY(ios,introduced=14.0);
@property (nonatomic, copy) NSDictionary * _Nullable personalizationConfig;
@property (nonatomic, readonly) BOOL hasPersonalizationConfig;
@property (nonatomic) BOOL isPersonalizationDisabled;
@property (nonatomic, readonly) BOOL isPersonalizationDisabledStatusNotConfigured;
@property (nonatomic, copy) NSString * _Nullable geofences;
@property (nonatomic) BOOL isGeofenceCapable;
@property (nonatomic, copy) NSDictionary * _Nullable inbox;
@property (nonatomic, readonly) BOOL hasInbox;
@property (nonatomic) NSInteger inboxLimit;
@property (nonatomic, readonly) BOOL hasInboxLimit;
@property (nonatomic) BOOL isNotFirstAppBackground;
@property (nonatomic) BOOL isForceTouchCapabilityEnabled;
@property (nonatomic) BOOL inAppDisabledStatus;
@property (nonatomic, strong) AIQMutableOrderedDictionary * _Nullable inApp;
@property (nonatomic, readonly) BOOL hasInApp;
@property (nonatomic) BOOL inAppFirstAppLaunchedMatched;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable crashLogKey;
@property (nonatomic, copy) NSArray<NSDictionary *> * _Nullable savedPushNotifications;
@property (nonatomic, readonly) BOOL hasSavedPushNotifications;
@property (nonatomic, strong) NSNumber * _Nonnull savedPushNotificationLimit;
@property (nonatomic) BOOL isSavedPushNotificationEnabled;
@property (nonatomic, copy) NSString * _Nullable richPushDeeplink;
@property (nonatomic) BOOL isFirstAppLaunch;
@property (nonatomic, copy) NSString * _Nullable endpointUserServer;
@property (nonatomic, copy) NSString * _Nullable endpointDback;
@property (nonatomic, copy) NSString * _Nullable endpointRecommendation;
@property (nonatomic, copy) NSString * _Nullable endpointPersonalization;
@property (nonatomic, copy) NSArray<NSDictionary *> * _Nullable failedPushEventStack;
@property (nonatomic, copy) NSData * _Nullable exitPushPayload;
@property (nonatomic) BOOL isCollectIDFA;
@property (nonatomic) BOOL isCollectLocation;
@end

@protocol AIQLocationUpdateDelegate;

SWIFT_CLASS("_TtC6Appier18AIQLocationManager")
@interface AIQLocationManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AIQLocationManager * _Nonnull shared;)
+ (AIQLocationManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <AIQLocationUpdateDelegate> _Nullable locationDelegate;
@property (nonatomic, weak) id <AIQGeofenceMonitoringDelegate> _Nullable geofenceDelegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CLLocationManager;
@class CLRegion;

@interface AIQLocationManager (SWIFT_EXTENSION(Appier)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManagerDidChangeAuthorization:(CLLocationManager * _Nonnull)manager SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didStartMonitoringForRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager monitoringDidFailForRegion:(CLRegion * _Nullable)region withError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
@end


SWIFT_PROTOCOL("_TtP6Appier25AIQLocationUpdateDelegate_")
@protocol AIQLocationUpdateDelegate
- (void)locationUpdatedWith:(NSDictionary * _Nullable)location;
@end


@class AIQConfiguration;
@class NSURLResponse;

SWIFT_CLASS("_TtC6Appier17AIQRequestManager")
@interface AIQRequestManager : NSObject
- (nonnull instancetype)initWith:(AIQConfiguration * _Nonnull)config OBJC_DESIGNATED_INITIALIZER;
- (void)requestExitPushDataFromServer:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP6Appier28AIQSilentPushHandlerDelegate_")
@protocol AIQSilentPushHandlerDelegate
- (void)updateInAppCampaignWithUserInfo:(NSDictionary * _Nonnull)userInfo completion:(void (^ _Nonnull)(void))completion;
- (void)updateGeofenceWithUserInfo:(NSDictionary * _Nonnull)userInfo completion:(void (^ _Nonnull)(void))completion;
@end


SWIFT_PROTOCOL("_TtP6Appier28AIQSilentPushHandlerProtocol_")
@protocol AIQSilentPushHandlerProtocol
@property (nonatomic, weak) id <AIQSilentPushHandlerDelegate> _Nullable delegate;
- (void)executeWithCompletion:(void (^ _Nonnull)(void))completion;
@end


SWIFT_CLASS("_TtC6Appier20AIQSilentPushManager")
@interface AIQSilentPushManager : NSObject
- (NSArray<id <AIQSilentPushHandlerProtocol>> * _Nonnull)parseWithPayload:(NSDictionary * _Nullable)payload SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class EndpointConfiguration;

SWIFT_CLASS_NAMED("AIQUAConfiguration")
@interface AIQConfiguration : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AIQConfiguration * _Nonnull shared;)
+ (AIQConfiguration * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) AIQLocalStorage * _Nonnull storage;
@property (nonatomic, copy) NSString * _Nonnull remoteConfigEndpoint;
@property (nonatomic, strong) EndpointConfiguration * _Nonnull endpoint;
@property (nonatomic, readonly, copy) NSString * _Nullable appIdentifier;
@property (nonatomic, readonly) int64_t appierIdentifier;
@property (nonatomic, readonly) BOOL isNewUser;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithStorage:(AIQLocalStorage * _Nonnull)storage OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC6Appier27AIQUncaughtExceptionHandler")
@interface AIQUncaughtExceptionHandler : NSObject
+ (void)uploadCrashLog:(NSData * _Nonnull)postData completionHandler:(void (^ _Nonnull)(NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLSession;
enum InAppCreativeType : NSInteger;

SWIFT_CLASS("_TtC6Appier10AIQUtility")
@interface AIQUtility : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSURLSession * _Nonnull session;)
+ (NSURLSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isRunningTests;)
+ (BOOL)isRunningTests SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isDevApnsEnv SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nullable)encodeWithObj:(id _Nullable)obj SWIFT_WARN_UNUSED_RESULT;
+ (id _Nullable)decodeWithData:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
+ (int64_t)getNewAppierId SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)daysBetweenDate:(NSDate * _Nonnull)startDate andDate:(NSDate * _Nonnull)endDate SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isValidObject:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)assertPropertyTypesIn:(NSDictionary * _Nullable)dict SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isRichPushSupported SWIFT_WARN_UNUSED_RESULT;
+ (enum InAppCreativeType)getInAppCreativeTypeWithFbCreativeDict:(NSDictionary * _Nonnull)fbCreativeDict SWIFT_WARN_UNUSED_RESULT;
+ (void)getUserDetailsFrom:(AIQLocalStorage * _Nonnull)storage with:(AIQDataTrackingConfiguration * _Nonnull)trackingConfig completion:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))completion;
+ (NSArray<NSString *> * _Nonnull)crashLogConcernKeywords SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// An object that represents an action to report to the framework.
SWIFT_CLASS_NAMED("Action")
@interface AIDAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull rawValue;
- (nonnull instancetype)initWithRawValue:(NSString * _Nonnull)rawValue OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface AIDAction (SWIFT_EXTENSION(Appier))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AIDAction * _Nonnull didRedeemCoupon;)
+ (AIDAction * _Nonnull)didRedeemCoupon SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AIDAction * _Nonnull didAddToCart;)
+ (AIDAction * _Nonnull)didAddToCart SWIFT_WARN_UNUSED_RESULT;
@end

@class AIDConfiguration;
@class UIViewController;
@class UIScrollView;
@class WKWebView;
@class AIDConversion;
@protocol UIViewControllerTransitionCoordinator;

SWIFT_CLASS_NAMED("AiDeal")
@interface AIDAiDeal : NSObject
@property (nonatomic, strong) AIDConfiguration * _Nonnull configuration;
/// Configures the API key used to connect to AiDeal servers.
/// This method must be called BEFORE logging view controllers and conversions.
- (void)configureWithApiKey:(NSString * _Nonnull)apiKey;
/// Starts logging a page represented by a view controller.
/// This method must be called in <code>viewDidAppear</code>.
/// The first scroll view found in the view controller’s children views will also be monitored automatically.
- (void)startLoggingWithViewController:(UIViewController * _Nonnull)viewController;
/// Starts logging a page represented by a view controller and the specified scroll view.
/// This method must be called in <code>viewDidAppear</code>.
- (void)startLoggingWithViewController:(UIViewController * _Nonnull)viewController scrollView:(UIScrollView * _Nullable)scrollView attributes:(NSDictionary<AIDPageAttributeName, id> * _Nonnull)attributes;
/// Starts logging a page represented by a view controller.
/// This method must be called in <code>viewDidAppear</code>.
/// The first scroll view found in the view controller’s children views will also be monitored automatically.
- (void)startLoggingWithViewController:(UIViewController * _Nonnull)viewController attributes:(NSDictionary<AIDPageAttributeName, id> * _Nonnull)attributes;
/// Starts logging a page represented by a view controller and the specified scroll view.
/// This method must be called in <code>viewDidAppear</code>.
- (void)startLoggingWithViewController:(UIViewController * _Nonnull)viewController scrollView:(UIScrollView * _Nullable)scrollView;
- (void)startLoggingWithViewController:(UIViewController * _Nonnull)viewController webView:(WKWebView * _Nonnull)webView;
/// Stops logging the current page.
/// This method must be called in <code>viewDidDisappear</code>.
- (void)stopLogging;
/// Logs conversion data, and send it to AiDeal servers.
- (void)logConversion:(AIDConversion * _Nonnull)conversion;
- (void)logAction:(AIDAction * _Nonnull)action;
- (void)setDataCollection:(BOOL)enabled;
/// Opens a campaign preview URL.
/// The URL can be either a universal link or a custom URL scheme, and accepts the following query string parameters:
/// <ul>
///   <li>
///     <code>zc_element_id</code>: the campaign’s element identifier
///   </li>
///   <li>
///     <code>zc_coupon_code</code>: the coupon code (optional)
///   </li>
/// </ul>
/// <h1>Examples</h1>
/// <ul>
///   <li>
///     <code>https://yoursite.com/foo/bar/?zc_element_id=99999&zc_coupon_code=DISCOUNT2000</code>
///   </li>
///   <li>
///     <code>yourapp:foo/bar/?zc_element_id=99999&zc_coupon_code=DISCOUNT2000</code>
///   </li>
/// </ul>
- (void)openURL:(NSURL * _Nonnull)url;
/// Notifies that the size of the current view is about to change.
/// Calling this method in <code>UIViewController.viewWillTransition(to:with:)</code> is necessary for applications allowing
/// landscape orientation, otherwise badges will not be correctly positioned after a rotation occurs.
- (void)viewWillTransitionWithTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AIDAiDeal * _Nonnull shared;)
+ (AIDAiDeal * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull offerButtonTappedNotification;)
+ (NSNotificationName _Nonnull)offerButtonTappedNotification SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull configurationDidChangeNotification;)
+ (NSNotificationName _Nonnull)configurationDidChangeNotification SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS_NAMED("AiDealConfiguration")
@interface AIDConfiguration : NSObject
- (void)setAllowsBadgeDisplay:(BOOL)flag;
- (void)setInsetsFromArea:(UIEdgeInsets)insets;
- (void)setBadgeDisplayAreaToInsideLayoutGuides;
- (void)setBadgeDisplayAreaToSafeArea SWIFT_AVAILABILITY(ios,introduced=11);
- (void)setBadgeDisplayAreaToScreen;
- (void)setBadgeDisplayArea:(CGRect)rect;
- (void)offsetBadgePositionByX:(CGFloat)x Y:(CGFloat)y;
- (void)setBadgePosition:(CGPoint)point;
- (void)resetBadgePosition;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class QGSdk;

SWIFT_CLASS_NAMED("AppierApp")
@interface APRApp : NSObject
@property (nonatomic, readonly, strong) AIDAiDeal * _Nonnull aiDeal;
@property (nonatomic, readonly, strong) QGSdk * _Nonnull aiqua;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setDataCollection:(BOOL)enabled;
- (void)showConsole;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) APRApp * _Nonnull sharedApp;)
+ (APRApp * _Nonnull)sharedApp SWIFT_WARN_UNUSED_RESULT;
@end

@class NSBundle;

SWIFT_CLASS("_TtC6Appier15AppierResources")
@interface AppierResources : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSBundle * _Nonnull bundle;)
+ (NSBundle * _Nonnull)bundle SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS_NAMED("Constant")
@interface QGConstant : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_SDK_VERSION;)
+ (NSString * _Nonnull)QG_SDK_VERSION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_SDK_VERSION_KEY;)
+ (NSString * _Nonnull)AIQ_SDK_VERSION_KEY SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_SDK_SUB_TYPE_KEY;)
+ (NSString * _Nonnull)AIQ_SDK_SUB_TYPE_KEY SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_SDK_SUB_TYPE_IOS;)
+ (NSString * _Nonnull)AIQ_SDK_SUB_TYPE_IOS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_SDK_SUB_VERSION_KEY;)
+ (NSString * _Nonnull)AIQ_SDK_SUB_VERSION_KEY SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_APP_VERSION;)
+ (NSString * _Nonnull)QG_APP_VERSION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_LAST_CLICKED_NOTIFICATION_ID;)
+ (NSString * _Nonnull)QG_LAST_CLICKED_NOTIFICATION_ID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_LAST_CLICKED_NOTIFICATION_TIME;)
+ (NSString * _Nonnull)QG_LAST_CLICKED_NOTIFICATION_TIME SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_NOTIFICATION_ID;)
+ (NSString * _Nonnull)QG_NOTIFICATION_ID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_NOTIFICATION_CLICKED;)
+ (NSString * _Nonnull)QG_NOTIFICATION_CLICKED SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_CAMPAIGN_ID;)
+ (NSString * _Nonnull)QG_CAMPAIGN_ID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_KEY;)
+ (NSString * _Nonnull)QG_KEY SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_NOTIF_ID;)
+ (NSString * _Nonnull)QG_NOTIF_ID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_GCM_ID;)
+ (NSString * _Nonnull)QG_GCM_ID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_NOTIFICATION_SOURCE;)
+ (NSString * _Nonnull)QG_NOTIFICATION_SOURCE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_CLICK_ATTRIBUTION_WINDOW;)
+ (NSString * _Nonnull)QG_CLICK_ATTRIBUTION_WINDOW SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger QG_CLICK_ATTRIBUTION_WINDOW_DEFAULT_VALUE;)
+ (NSInteger)QG_CLICK_ATTRIBUTION_WINDOW_DEFAULT_VALUE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_VIEW_THROUGH_ATTRIBUTION_WINDOW;)
+ (NSString * _Nonnull)QG_VIEW_THROUGH_ATTRIBUTION_WINDOW SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger QG_VIEW_THROUGH_ATTRIBUTION_WINDOW_DEFAULT_VALUE;)
+ (NSInteger)QG_VIEW_THROUGH_ATTRIBUTION_WINDOW_DEFAULT_VALUE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_APP_ID;)
+ (NSString * _Nonnull)QG_APP_ID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_APP_SECRET;)
+ (NSString * _Nonnull)QG_APP_SECRET SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_CROSS_PLATFORM_FRAMEWORK_SDK_TYPE;)
+ (NSString * _Nonnull)AIQ_CROSS_PLATFORM_FRAMEWORK_SDK_TYPE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_CROSS_PLATFORM_FRAMEWORK_SDK_VERSION;)
+ (NSString * _Nonnull)AIQ_CROSS_PLATFORM_FRAMEWORK_SDK_VERSION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_APPIER_ID;)
+ (NSString * _Nonnull)AIQ_APPIER_ID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_APPIER_ID_CREATE_TIME;)
+ (NSString * _Nonnull)AIQ_APPIER_ID_CREATE_TIME SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSTimeInterval AIQ_NEW_USER_DURATION;)
+ (NSTimeInterval)AIQ_NEW_USER_DURATION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_DEVICE_TOKEN;)
+ (NSString * _Nonnull)QG_DEVICE_TOKEN SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_UNKNOWN_VALUE;)
+ (NSString * _Nonnull)QG_UNKNOWN_VALUE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_LAST_LOCATION;)
+ (NSString * _Nonnull)QG_LAST_LOCATION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_APP_LAUNCH;)
+ (NSString * _Nonnull)QG_APP_LAUNCH SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_FIRST_APP_LAUNCH;)
+ (NSString * _Nonnull)QG_FIRST_APP_LAUNCH SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_RECOMMENDATION_IMPRESSION;)
+ (NSString * _Nonnull)QG_RECOMMENDATION_IMPRESSION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_RECOMMENDATION_CLICKED;)
+ (NSString * _Nonnull)QG_RECOMMENDATION_CLICKED SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double QG_APP_LAUNCH_DELAY;)
+ (double)QG_APP_LAUNCH_DELAY SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_IN_APP;)
+ (NSString * _Nonnull)QG_IN_APP SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_IN_APP_FIRST_APP_LAUNCHED_MATCHED;)
+ (NSString * _Nonnull)QG_IN_APP_FIRST_APP_LAUNCHED_MATCHED SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_LAST_VIEW_THROUGH_NOTIFICATION_ID;)
+ (NSString * _Nonnull)QG_LAST_VIEW_THROUGH_NOTIFICATION_ID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_LAST_VIEW_THROUGH_TIME;)
+ (NSString * _Nonnull)QG_LAST_VIEW_THROUGH_TIME SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_IN_APP_DISABLED_STATUS;)
+ (NSString * _Nonnull)QG_IN_APP_DISABLED_STATUS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_PROFILE_INFO_LAST_SENT_TIME;)
+ (NSString * _Nonnull)QG_PROFILE_INFO_LAST_SENT_TIME SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_USER_DETAILS_LAST_SENT_TIME;)
+ (NSString * _Nonnull)QG_USER_DETAILS_LAST_SENT_TIME SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_DEV_PROFILE;)
+ (NSString * _Nonnull)QG_DEV_PROFILE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_AIQ_PUSH_ENABLED_STATUS;)
+ (NSString * _Nonnull)QG_AIQ_PUSH_ENABLED_STATUS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_INBOX;)
+ (NSString * _Nonnull)QG_INBOX SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_INBOX_LIMIT;)
+ (NSString * _Nonnull)QG_INBOX_LIMIT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_CAROUSEL_ACTION_CATEGORY;)
+ (NSString * _Nonnull)QG_CAROUSEL_ACTION_CATEGORY SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_CAROUSEL_ACTION_OPEN_APP;)
+ (NSString * _Nonnull)QG_CAROUSEL_ACTION_OPEN_APP SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_CAROUSEL_ACTION_NEXT;)
+ (NSString * _Nonnull)QG_CAROUSEL_ACTION_NEXT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_SEND_IDFA_WITH_CONSENT;)
+ (NSString * _Nonnull)QG_SEND_IDFA_WITH_CONSENT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_ADS_TRACKING_STATUS;)
+ (NSString * _Nonnull)QG_ADS_TRACKING_STATUS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_OPTOUT_STATUS;)
+ (NSString * _Nonnull)QG_OPTOUT_STATUS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_CRASH_LOG_KEY;)
+ (NSString * _Nonnull)QG_CRASH_LOG_KEY SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_SAVED_PUSH_NOTIFICATION;)
+ (NSString * _Nonnull)QG_SAVED_PUSH_NOTIFICATION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_SAVED_PUSH_NOTIFICATION_LIMIT;)
+ (NSString * _Nonnull)QG_SAVED_PUSH_NOTIFICATION_LIMIT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_SAVE_PUSH_NOTIFICATION_ENABLED;)
+ (NSString * _Nonnull)QG_SAVE_PUSH_NOTIFICATION_ENABLED SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_GEOFENCING_CAPABLE;)
+ (NSString * _Nonnull)AIQ_GEOFENCING_CAPABLE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQP_CONFIG;)
+ (NSString * _Nonnull)AIQP_CONFIG SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQP_DISABLED_STATUS;)
+ (NSString * _Nonnull)AIQP_DISABLED_STATUS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_SAFARI_TRACKING_DISABLED_STATUS;)
+ (NSString * _Nonnull)QG_SAFARI_TRACKING_DISABLED_STATUS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_SAFARI_DATA_SENT_STATUS;)
+ (NSString * _Nonnull)QG_SAFARI_DATA_SENT_STATUS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_APP_GROUP_NAME_SDK;)
+ (NSString * _Nonnull)QG_APP_GROUP_NAME_SDK SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_FORCE_TOUCH_CAPABILITY_STATUS;)
+ (NSString * _Nonnull)QG_FORCE_TOUCH_CAPABILITY_STATUS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_RICH_PUSH_SUPPORTED_STATUS;)
+ (NSString * _Nonnull)QG_RICH_PUSH_SUPPORTED_STATUS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_EXT_RICH_PUSH_DEEPLINK;)
+ (NSString * _Nonnull)QG_EXT_RICH_PUSH_DEEPLINK SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_IS_NOT_FIRST_APP_BACKGROUND;)
+ (NSString * _Nonnull)QG_IS_NOT_FIRST_APP_BACKGROUND SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_EXIT_PUSH_PAYLOAD;)
+ (NSString * _Nonnull)QG_EXIT_PUSH_PAYLOAD SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_IS_COLLECT_IDFA;)
+ (NSString * _Nonnull)QG_IS_COLLECT_IDFA SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_IS_COLLECT_LOCATION;)
+ (NSString * _Nonnull)QG_IS_COLLECT_LOCATION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull EVENT_CONTROL_GROUP_RECEIVED;)
+ (NSString * _Nonnull)EVENT_CONTROL_GROUP_RECEIVED SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull EVENT_INAPP_DISPLAYED;)
+ (NSString * _Nonnull)EVENT_INAPP_DISPLAYED SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull EVENT_INAPP_TOGGLED;)
+ (NSString * _Nonnull)EVENT_INAPP_TOGGLED SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AIQ_REMOTE_CONFIG_URL;)
+ (NSString * _Nonnull)AIQ_REMOTE_CONFIG_URL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ENVIRONMENT;)
+ (NSString * _Nonnull)ENVIRONMENT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_UNIVERSAL_LINK_DOMAINS;)
+ (NSString * _Nonnull)QG_UNIVERSAL_LINK_DOMAINS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull APPIER_APP_DELEGATE_PROXY_ENABLED_INFO_PLIST_KEY;)
+ (NSString * _Nonnull)APPIER_APP_DELEGATE_PROXY_ENABLED_INFO_PLIST_KEY SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull QG_FAILED_PUSH_EVENT_STACK;)
+ (NSString * _Nonnull)QG_FAILED_PUSH_EVENT_STACK SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AIDConversionItem;

SWIFT_CLASS_NAMED("Conversion")
@interface AIDConversion : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) NSInteger totalQuantity;
@property (nonatomic) double totalPrice;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull couponCodes;
@property (nonatomic, copy) NSArray<AIDConversionItem *> * _Nonnull items;
@property (nonatomic, readonly, copy) NSString * _Nonnull conversionId SWIFT_DEPRECATED_MSG("", "identifier");
@property (nonatomic, copy) NSString * _Nullable conversionName SWIFT_DEPRECATED_MSG("", "name");
@property (nonatomic) NSInteger totalItems SWIFT_DEPRECATED_MSG("", "numberOfItems");
- (nonnull instancetype)initWithIdentifier:(NSString * _Nonnull)identifier OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS_NAMED("ConversionItem")
@interface AIDConversionItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSURL * _Nullable url;
@property (nonatomic) double price;
@property (nonatomic) NSInteger quantity;
@property (nonatomic) NSInteger count SWIFT_DEPRECATED_MSG("", "quantity");
- (nonnull instancetype)initWithIdentifier:(NSString * _Nonnull)identifier OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("CoreDataComponent")
@interface AIQCoreDataComponent : NSObject
@property (nonatomic, strong) NSManagedObjectContext * _Nonnull managedObjectContext;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DataCollectionRemoteService")
@interface AIQDataCollectionRemoteService : NSObject
- (nonnull instancetype)initWithConfiguration:(AIQConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AIQDataPointsResponse;

SWIFT_PROTOCOL_NAMED("DataCollectionService")
@protocol AIQDataCollectionService
- (void)uploadDataPoints:(NSData * _Nonnull)dataPoints completionHandler:(void (^ _Nonnull)(AIQDataPointsResponse * _Nullable, double, NSError * _Nullable))completionHandler;
@end


@interface AIQDataCollectionRemoteService (SWIFT_EXTENSION(Appier)) <AIQDataCollectionService>
- (void)uploadDataPoints:(NSData * _Nonnull)dataPoints completionHandler:(void (^ _Nonnull)(AIQDataPointsResponse * _Nullable, double, NSError * _Nullable))completionHandler;
@end



SWIFT_CLASS_NAMED("DataPointsResponse")
@interface AIQDataPointsResponse : NSObject
@property (nonatomic) BOOL success;
@property (nonatomic, copy) NSString * _Nullable error;
+ (AIQDataPointsResponse * _Nullable)decodeWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nullable)dataAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, QGDATATYPE, "DataType", open) {
  QGDATATYPE_PROFILE SWIFT_COMPILE_NAME("profile") = 0,
  QGDATATYPE_EVENTS SWIFT_COMPILE_NAME("events") = 1,
  QGDATATYPE_USERDETAILS SWIFT_COMPILE_NAME("userDetails") = 2,
};


SWIFT_CLASS_NAMED("DeviceInfo")
@interface APRDeviceInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface APRDeviceInfo (SWIFT_EXTENSION(Appier))
+ (NSNumber * _Nonnull)optOutSet SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)IDFA SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)IDFV SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)systemVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)deviceModel SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)modelName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)deviceName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)language SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)timeZone SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)appVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)appBuildNumber SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)appBundleIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary * _Nullable)diskSpace SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)coreTelephonyNetwork SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)networkType SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, NSString *> * _Nonnull)simCardInfo SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)richPushSupported SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)systemVersionEqualTo:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)systemVersionGreaterThan:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)systemVersionGreaterThanOrEqualTo:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)systemVersionLessThan:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)systemVersionLessThanOrEqualTo:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6Appier21EndpointConfiguration")
@interface EndpointConfiguration : NSObject
/// API key: userServerEndpoint
@property (nonatomic, copy) NSString * _Nullable userServer;
/// API key: dbackEndpoint
@property (nonatomic, copy) NSString * _Nullable dback;
/// API key: recommendationEndpoint
@property (nonatomic, copy) NSString * _Nullable recommendation;
/// API key: personalizationEndpoint
@property (nonatomic, copy) NSString * _Nullable personalization;
- (void)clear;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL_NAMED("EventLogger")
@protocol AIQEventLogger
- (void)logErrorWithMissingEndpoint:(NSString * _Nonnull)missingEndpoint api:(NSString * _Nonnull)api;
@end


SWIFT_CLASS_NAMED("FrameworkInfo")
@interface APRFrameworkInfo : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull buildString;)
+ (NSString * _Nonnull)buildString SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull versionString;)
+ (NSString * _Nonnull)versionString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AIQInAppAdditionalimeRange;
@class AIQLoggedEvent;

SWIFT_CLASS_NAMED("InAppAdditionalCondition")
@interface AIQInAppAdditionalCondition : NSObject
@property (nonatomic, strong) AIQInAppAdditionalimeRange * _Nonnull timeRange;
+ (AIQInAppAdditionalCondition * _Nullable)decodeWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nullable)dataAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (BOOL)matchWithLoggedEvents:(NSArray<AIQLoggedEvent *> * _Nonnull)loggedEvents SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("InAppAdditionalTimeRange")
@interface AIQInAppAdditionalimeRange : NSObject
@property (nonatomic, readonly) NSInteger durationInMilliSec;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, AIQInAppBadgeAlignment, "InAppBadgeAlignment", open) {
  AIQInAppBadgeAlignmentTopLeft = 0,
  AIQInAppBadgeAlignmentTopRight = 1,
};


SWIFT_CLASS_NAMED("InAppBadgeSetting")
@interface AIQInAppBadgeSetting : NSObject
@property (nonatomic) enum AIQInAppBadgeAlignment align;
@property (nonatomic) BOOL asDeepLink;
+ (AIQInAppBadgeSetting * _Nullable)decodeWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nullable)dataAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, InAppCreativeType, "InAppCreativeType", open) {
  InAppCreativeType_UNKNOWN SWIFT_COMPILE_NAME("unknown") = 0,
  InAppCreativeType_SMALL SWIFT_COMPILE_NAME("small") = 1,
  InAppCreativeType_MEDIUM SWIFT_COMPILE_NAME("medium") = 2,
  InAppCreativeType_LARGE SWIFT_COMPILE_NAME("large") = 3,
};


SWIFT_CLASS_NAMED("InAppMatchCondition")
@interface AIQInAppMatchCondition : NSObject
+ (AIQInAppMatchCondition * _Nullable)decodeWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nullable)dataAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (BOOL)matchWithParameters:(NSDictionary<NSString *, id> * _Nonnull)parameters SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("InAppRemoteService")
@interface AIQInAppRemoteService : NSObject
- (nonnull instancetype)initWithConfiguration:(AIQConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("InAppService")
@protocol AIQInAppService
- (void)fetchInAppCampaignsWithShouldFetchInapp:(BOOL)shouldFetchInapp shouldFetchGeofence:(BOOL)shouldFetchGeofence completionHandler:(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))completionHandler;
@end


@interface AIQInAppRemoteService (SWIFT_EXTENSION(Appier)) <AIQInAppService>
- (void)fetchInAppCampaignsWithShouldFetchInapp:(BOOL)shouldFetchInapp shouldFetchGeofence:(BOOL)shouldFetchGeofence completionHandler:(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))completionHandler;
@end


typedef SWIFT_ENUM_NAMED(NSInteger, APRLogType, "LogType", open) {
  APRLogTypeDebug = 0,
  APRLogTypeInfo = 1,
  APRLogTypeWarning = 2,
  APRLogTypeError = 3,
};


SWIFT_CLASS_NAMED("LoggedEvent")
@interface AIQLoggedEvent : NSObject
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name parameters:(NSString * _Nullable)parameters;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name timestamp:(NSInteger)timestamp parameters:(NSString * _Nullable)parameters;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name dictionaryParameters:(NSDictionary<NSString *, id> * _Nullable)parameters;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("LoggedEventDAO")
@interface AIQLoggedEventDAO : NSObject
- (nonnull instancetype)initWithManagedObjectContext:(NSManagedObjectContext * _Nonnull)context OBJC_DESIGNATED_INITIALIZER;
- (NSArray<AIQLoggedEvent *> * _Nonnull)getAllWithLimit:(NSInteger)withLimit SWIFT_WARN_UNUSED_RESULT;
- (NSArray<AIQLoggedEvent *> * _Nonnull)getLoggedEventEarlierBeforeWithTime:(NSInteger)beforeFromNow SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)deleteOverflowed;
- (NSInteger)deleteOutdated;
- (NSInteger)deleteAll;
- (BOOL)createWithLoggedEvent:(AIQLoggedEvent * _Nonnull)loggedEvent;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSEntityDescription;

SWIFT_CLASS_NAMED("LoggedEventEntity")
@interface LoggedEventEntity : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface LoggedEventEntity (SWIFT_EXTENSION(Appier))
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable parameters;
@property (nonatomic) int64_t timestamp;
@end


/// An object that prints interpolated strings to the console, and a drop-in replacement for the
/// <code>os.Logger</code> type introduced in iOS 14.
SWIFT_CLASS_NAMED("Logger")
@interface APRLogger : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly) BOOL enabled;
+ (NSString * _Nonnull)descriptionForLevel:(enum APRLogType)level SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface APRLogger (SWIFT_EXTENSION(Appier))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) APRLogger * _Nonnull aiquaNotificationLogger;)
+ (APRLogger * _Nonnull)aiquaNotificationLogger SWIFT_WARN_UNUSED_RESULT;
@end


@interface APRLogger (SWIFT_EXTENSION(Appier))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) APRLogger * _Nonnull aiquaLogger;)
+ (APRLogger * _Nonnull)aiquaLogger SWIFT_WARN_UNUSED_RESULT;
@end









@interface NSString (SWIFT_EXTENSION(Appier))
- (BOOL)isValidStr SWIFT_WARN_UNUSED_RESULT;
- (NSURL * _Nullable)encodedURL SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppSecret SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isStringContainsNewLineCharacter SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) NSString * _Nonnull SHA256string;
@end



SWIFT_CLASS_NAMED("PersonalizationRemoteService")
@interface AIQPersonalizationRemoteService : NSObject
- (nonnull instancetype)initWithConfiguration:(AIQConfiguration * _Nonnull)configuration session:(NSURLSession * _Nonnull)session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("PersonalizationService")
@protocol AIQPersonalizationService
- (void)reportDebugConfigContext:(NSDictionary<NSString *, id> * _Nonnull)context;
- (void)requestPersonalizationConfig:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))completionHandler;
@end


@interface AIQPersonalizationRemoteService (SWIFT_EXTENSION(Appier)) <AIQPersonalizationService>
/// Calling this method only in debug mode
- (void)reportDebugConfigContext:(NSDictionary<NSString *, id> * _Nonnull)context;
- (void)requestPersonalizationConfig:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))completionHandler;
@end


@class WKUserContentController;
@class WKScriptMessage;

SWIFT_PROTOCOL("_TtP6Appier24QGWKScriptMessageHandler_")
@protocol QGWKScriptMessageHandler
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
@end

@class WKWebViewConfiguration;
@class NSCoder;
@class WKUserScript;

SWIFT_CLASS("_TtC6Appier11QGWKWebView")
@interface QGWKWebView : WKWebView
@property (nonatomic, strong) id <QGWKScriptMessageHandler> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame configuration:(WKWebViewConfiguration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)injectUserScript:(WKUserScript * _Nullable)userScript;
- (void)addScriptMessageHandler:(NSString * _Nullable)name;
@end


@interface QGWKWebView (SWIFT_EXTENSION(Appier)) <WKScriptMessageHandler>
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
@end


SWIFT_CLASS_NAMED("RecommendationRequest")
@interface AIQRecommendationRequest : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RecommendationPopularTagsRequest")
@interface AIQRecommendationPopularTagsRequest : AIQRecommendationRequest
@property (nonatomic, readonly, copy) NSString * _Nonnull scenarioId;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull numberOfReturn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSError;

SWIFT_CLASS_NAMED("Builder")
@interface AIQRecommendationPopularTagsRequestBuilder : NSObject
- (nonnull instancetype)setScenarioId:(NSString * _Nonnull)scenarioId;
- (nonnull instancetype)setNumberOfReturn:(NSNumber * _Nonnull)numOfReturn;
- (AIQRecommendationPopularTagsRequest * _Nullable)buildWithError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RecommendationProductItem")
@interface AIQRecommendationProductItem : NSObject
@property (nonatomic, copy) NSString * _Nullable productId;
@property (nonatomic, readonly, strong) NSNumber * _Nullable positionNumber;
@property (nonatomic, copy) NSString * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nullable descriptionText;
@property (nonatomic, copy) NSString * _Nullable url;
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable currency;
@property (nonatomic, copy) NSString * _Nullable price;
@property (nonatomic, copy) NSString * _Nullable originalPrice;
@property (nonatomic, copy) NSString * _Nullable ID;
@property (nonatomic, copy) NSString * _Nullable availability;
@property (nonatomic, readonly, strong) NSNumber * _Nullable scoreNumber;
@property (nonatomic, copy) NSString * _Nullable imageLink;
@property (nonatomic, copy) NSString * _Nullable link;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RecommendationProductResponse")
@interface AIQRecommendationProductResponse : NSObject
@property (nonatomic, copy) NSString * _Nullable errorMessage;
@property (nonatomic, copy) NSString * _Nullable scenarioId;
@property (nonatomic, copy) NSString * _Nullable modelId;
@property (nonatomic, copy) NSString * _Nullable recId;
@property (nonatomic, copy) NSString * _Nullable expType;
@property (nonatomic, copy) NSArray<AIQRecommendationProductItem *> * _Nonnull items;
@property (nonatomic) BOOL hasNextPage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RecommendationProductToTagsRequest")
@interface AIQRecommendationProductToTagsRequest : AIQRecommendationRequest
@property (nonatomic, readonly, copy) NSString * _Nonnull productId;
@property (nonatomic, readonly, copy) NSString * _Nonnull scenarioId;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull numberOfReturn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("Builder")
@interface AIQRecommendationProductToTagsRequestBuilder : NSObject
- (nonnull instancetype)setProductId:(NSString * _Nonnull)productId;
- (nonnull instancetype)setScenarioId:(NSString * _Nonnull)scenarioId;
- (nonnull instancetype)setNumberOfReturn:(NSNumber * _Nonnull)numOfReturn;
- (AIQRecommendationProductToTagsRequest * _Nullable)buildWithError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLRequest;

SWIFT_CLASS_NAMED("RecommendationRemoteService")
@interface AIQRecommendationRemoteService : NSObject
@property (nonatomic, copy) NSURLRequest * _Nullable observingRequest;
- (nonnull instancetype)initWithConfiguration:(AIQConfiguration * _Nonnull)configuration session:(NSURLSession * _Nonnull)session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AIQRecommendationTagResponse;

SWIFT_PROTOCOL_NAMED("RecommendationService")
@protocol AIQRecommendationService
@property (nonatomic, copy) NSURLRequest * _Nullable observingRequest;
- (void)getRecommendationWithScenarioId:(NSString * _Nonnull)scenarioId withQueryParameters:(NSDictionary<NSString *, id> * _Nullable)queryStringDict withCompletionHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))completionHandler;
- (void)getTagsWithRequest:(AIQRecommendationRequest * _Nonnull)request withCompletionHandler:(void (^ _Nonnull)(AIQRecommendationTagResponse * _Nullable, NSError * _Nullable))completionHandler;
- (void)getProductsWithRequest:(AIQRecommendationRequest * _Nonnull)request withCompletionHandler:(void (^ _Nonnull)(AIQRecommendationProductResponse * _Nullable, NSError * _Nullable))completionHandler;
@end


@interface AIQRecommendationRemoteService (SWIFT_EXTENSION(Appier)) <AIQRecommendationService>
- (void)getRecommendationWithScenarioId:(NSString * _Nonnull)scenarioId withQueryParameters:(NSDictionary<NSString *, id> * _Nullable)queryStringDict withCompletionHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))completionHandler;
- (void)getTagsWithRequest:(AIQRecommendationRequest * _Nonnull)requestObj withCompletionHandler:(void (^ _Nonnull)(AIQRecommendationTagResponse * _Nullable, NSError * _Nullable))completionHandler;
- (void)getProductsWithRequest:(AIQRecommendationRequest * _Nonnull)requestObj withCompletionHandler:(void (^ _Nonnull)(AIQRecommendationProductResponse * _Nullable, NSError * _Nullable))completionHandler;
@end





SWIFT_CLASS_NAMED("RecommendationTagItem")
@interface AIQRecommendationTagItem : NSObject
@property (nonatomic, copy) NSString * _Nullable tagName;
@property (nonatomic, copy) NSString * _Nullable ID;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RecommendationTagResponse")
@interface AIQRecommendationTagResponse : NSObject
@property (nonatomic, copy) NSString * _Nullable errorMessage;
@property (nonatomic, copy) NSString * _Nullable scenarioId;
@property (nonatomic, copy) NSString * _Nullable modelId;
@property (nonatomic, copy) NSString * _Nullable recId;
@property (nonatomic, copy) NSString * _Nullable expType;
@property (nonatomic, copy) NSArray<AIQRecommendationTagItem *> * _Nonnull items;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RecommendationTagToProductsRequest")
@interface AIQRecommendationTagToProductsRequest : AIQRecommendationRequest
@property (nonatomic, readonly, copy) NSString * _Nonnull scenarioId;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull numberOfReturn;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull pageNumber;
@property (nonatomic, copy) NSString * _Nonnull tags;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull seedNum;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("Builder")
@interface AIQRecommendationTagToProductsRequestBuilder : NSObject
- (nonnull instancetype)setScenarioId:(NSString * _Nonnull)scenarioId;
- (nonnull instancetype)setNumberOfReturn:(NSNumber * _Nonnull)numOfReturn;
- (nonnull instancetype)setPageNumber:(NSNumber * _Nonnull)pageNum;
- (nonnull instancetype)setTags:(NSString * _Nonnull)tags;
- (nonnull instancetype)setSeedNumber:(NSNumber * _Nonnull)seed;
- (nonnull instancetype)nextPage;
- (AIQRecommendationTagToProductsRequest * _Nullable)buildWithError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RecommendationTagToTagsRequest")
@interface AIQRecommendationTagToTagsRequest : AIQRecommendationRequest
@property (nonatomic, readonly, copy) NSString * _Nonnull tagName;
@property (nonatomic, readonly, copy) NSString * _Nonnull scenarioId;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull numberOfReturn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("Builder")
@interface AIQRecommendationTagToTagsRequestBuilder : NSObject
- (nonnull instancetype)setTagName:(NSString * _Nonnull)tagName;
- (nonnull instancetype)setScenarioId:(NSString * _Nonnull)scenarioId;
- (nonnull instancetype)setNumberOfReturn:(NSNumber * _Nonnull)numOfReturn;
- (AIQRecommendationTagToTagsRequest * _Nullable)buildWithError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RecommendationUserToTagsRequest")
@interface AIQRecommendationUserToTagsRequest : AIQRecommendationRequest
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
@property (nonatomic, readonly, copy) NSString * _Nonnull scenarioId;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull numberOfReturn;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("Builder")
@interface AIQRecommendationUserToTagsRequestBuilder : NSObject
- (nonnull instancetype)setUserId:(NSString * _Nonnull)userId;
- (nonnull instancetype)setScenarioId:(NSString * _Nonnull)scenarioId;
- (nonnull instancetype)setNumberOfReturn:(NSNumber * _Nonnull)numOfReturn;
- (AIQRecommendationUserToTagsRequest * _Nullable)buildWithError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AIQRemoteConfigEndpoints;

SWIFT_CLASS_NAMED("RemoteConfig")
@interface AIQRemoteConfig : NSObject
@property (nonatomic, strong) AIQRemoteConfigEndpoints * _Nullable endpoints;
+ (AIQRemoteConfig * _Nullable)decodeWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nullable)dataAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RemoteConfigEndpoints")
@interface AIQRemoteConfigEndpoints : NSObject
@property (nonatomic, copy) NSString * _Nullable dback;
@property (nonatomic, copy) NSString * _Nullable user;
@property (nonatomic, copy) NSString * _Nullable personalization;
@property (nonatomic, copy) NSString * _Nullable recommendation;
+ (AIQRemoteConfigEndpoints * _Nullable)decodeWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nullable)dataAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RemoteConfigRemoteService")
@interface AIQRemoteConfigRemoteService : NSObject
- (nonnull instancetype)initWithConfiguration:(AIQConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("RemoteConfigService")
@protocol AIQRemoteConfigService
- (void)fetchRemoteConfigWithCompletionHandler:(void (^ _Nonnull)(AIQRemoteConfig * _Nullable, NSError * _Nullable))completionHandler;
@end


@interface AIQRemoteConfigRemoteService (SWIFT_EXTENSION(Appier)) <AIQRemoteConfigService>
- (void)fetchRemoteConfigWithCompletionHandler:(void (^ _Nonnull)(AIQRemoteConfig * _Nullable, NSError * _Nullable))completionHandler;
@end


@class NSURLSessionDataTask;
@class NSCachedURLResponse;

SWIFT_CLASS_NAMED("SessionDelegate")
@interface QGSessionDelegate : NSObject <NSURLSessionDataDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) QGSessionDelegate * _Nonnull shared;)
+ (QGSessionDelegate * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSUserActivity;

SWIFT_CLASS("_TtC6Appier27ThirdPartyUrlHandlerService")
@interface ThirdPartyUrlHandlerService : NSObject
+ (void)handleUrl:(NSURL * _Nonnull)url;
+ (void)handleUserActivity:(NSUserActivity * _Nonnull)userActivity;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface UIApplication (SWIFT_EXTENSION(Appier))
+ (BOOL)isAbleToSwizzleMethods SWIFT_WARN_UNUSED_RESULT;
@end




@interface UIColor (SWIFT_EXTENSION(Appier))
+ (UIColor * _Nonnull)qgColor:(CGFloat)r :(CGFloat)g :(CGFloat)b :(CGFloat)a SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull qgBackgroundOverlay;)
+ (UIColor * _Nonnull)qgBackgroundOverlay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull qgMessage;)
+ (UIColor * _Nonnull)qgMessage SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull qgClear;)
+ (UIColor * _Nonnull)qgClear SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull qgAdaptiveWhite;)
+ (UIColor * _Nonnull)qgAdaptiveWhite SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull qgAdaptiveBlack;)
+ (UIColor * _Nonnull)qgAdaptiveBlack SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIFont (SWIFT_EXTENSION(Appier))
+ (UIFont * _Nonnull)qgHelveticaNeue:(CGFloat)size SWIFT_WARN_UNUSED_RESULT;
+ (UIFont * _Nonnull)qgHelveticaNeueBold:(CGFloat)size SWIFT_WARN_UNUSED_RESULT;
+ (UIFont * _Nonnull)qgHelveticaNeueLight:(CGFloat)size SWIFT_WARN_UNUSED_RESULT;
+ (UIFont * _Nonnull)qgHelveticaNeueMedium:(CGFloat)size SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIFont * _Nonnull qgInAppMessage;)
+ (UIFont * _Nonnull)qgInAppMessage SWIFT_WARN_UNUSED_RESULT;
@end




@interface NSURLSessionConfiguration (SWIFT_EXTENSION(Appier))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSURLSessionConfiguration * _Nonnull aiqDefault;)
+ (NSURLSessionConfiguration * _Nonnull)aiqDefault SWIFT_WARN_UNUSED_RESULT;
@end




#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
